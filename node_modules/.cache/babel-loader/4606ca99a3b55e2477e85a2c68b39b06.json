{"ast":null,"code":"var _jsxFileName = \"/home/hannamintel/MY FILES/GIT/React-TypeScript_Training/react_k/src/components/ControlledOnOff /ControlledOnOff.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ControlledOnOff = props => {\n  const onSTyle = {\n    width: \"30px\",\n    height: \"20px\",\n    border: \"1px solid black\",\n    display: \"inline-block\",\n    padding: \"2px\",\n    backgroundColor: props.onOff ? \"green\" : \"white\"\n  };\n  const offSTyle = {\n    width: \"30px\",\n    height: \"20px\",\n    border: \"1px solid black\",\n    display: \"inline-block\",\n    marginLeft: \"2px\",\n    padding: \"2px\",\n    backgroundColor: on ? \"white\" : \"red\"\n  };\n  const indicatorSTyle = {\n    width: \"10px\",\n    height: \"10px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    display: \"inline-block\",\n    marginLeft: \"5px\",\n    backgroundColor: on ? \"green\" : \"red\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: onSTyle,\n      onClick: () => {\n        props.onClick(true);\n      },\n      children: \"On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: offSTyle,\n      onClick: () => {\n        props.onClick(false);\n      },\n      children: \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: indicatorSTyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = ControlledOnOff;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledOnOff\");","map":{"version":3,"sources":["/home/hannamintel/MY FILES/GIT/React-TypeScript_Training/react_k/src/components/ControlledOnOff /ControlledOnOff.tsx"],"names":["React","ControlledOnOff","props","onSTyle","width","height","border","display","padding","backgroundColor","onOff","offSTyle","marginLeft","on","indicatorSTyle","borderRadius","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;;AAOA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAsB;AAEjD,QAAMC,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,MAAM,EAAE,MAFI;AAGZC,IAAAA,MAAM,EAAE,iBAHI;AAIZC,IAAAA,OAAO,EAAE,cAJG;AAKZC,IAAAA,OAAO,EAAE,KALG;AAMZC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,KAAN,GAAc,OAAd,GAAwB;AAN7B,GAAhB;AAQA,QAAMC,QAAQ,GAAG;AACbP,IAAAA,KAAK,EAAE,MADM;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbC,IAAAA,MAAM,EAAE,iBAHK;AAIbC,IAAAA,OAAO,EAAE,cAJI;AAKbK,IAAAA,UAAU,EAAE,KALC;AAMbJ,IAAAA,OAAO,EAAE,KANI;AAObC,IAAAA,eAAe,EAAEI,EAAE,GAAG,OAAH,GAAa;AAPnB,GAAjB;AASA,QAAMC,cAAc,GAAG;AACnBV,IAAAA,KAAK,EAAE,MADY;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBU,IAAAA,YAAY,EAAE,KAHK;AAInBT,IAAAA,MAAM,EAAE,iBAJW;AAKnBC,IAAAA,OAAO,EAAE,cALU;AAMnBK,IAAAA,UAAU,EAAE,KANO;AAOnBH,IAAAA,eAAe,EAAEI,EAAE,GAAG,OAAH,GAAa;AAPb,GAAvB;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEV,OAAZ;AAAqB,MAAA,OAAO,EAAG,MAAM;AAAED,QAAAA,KAAK,CAACc,OAAN,CAAc,IAAd;AAAoB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAEL,QAAZ;AAAsB,MAAA,OAAO,EAAG,MAAM;AAAET,QAAAA,KAAK,CAACc,OAAN,CAAc,KAAd;AAAqB,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtCM;KAAMb,e","sourcesContent":["import React, { useState } from \"react\";\n\ntype OnOffType = {\n    onClick: (value: boolean) => void\n    onOff: boolean\n} \n\nexport const ControlledOnOff = (props: OnOffType) => {\n\n    const onSTyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        backgroundColor: props.onOff ? \"green\" : \"white\"\n    };\n    const offSTyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        marginLeft: \"2px\",\n        padding: \"2px\",\n        backgroundColor: on ? \"white\" : \"red\"\n    }; \n    const indicatorSTyle = {\n        width: \"10px\",\n        height: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        marginLeft: \"5px\",\n        backgroundColor: on ? \"green\" : \"red\"\n    };   \n\n    return (\n        <div>\n            <div style={onSTyle} onClick={ () => { props.onClick(true)}} >On</div>\n            <div style={offSTyle} onClick={ () => { props.onClick(false)}} >Off</div>\n            <div style={indicatorSTyle}></div>\n        </div>\n    )\n\n\n}\n"]},"metadata":{},"sourceType":"module"}
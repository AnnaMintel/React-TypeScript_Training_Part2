{"ast":null,"code":"var _jsxFileName = \"/home/hannamintel/MY FILES/GIT/React-TypeScript_Training/react_k/src/components/input/input.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UncontrolledInput = () => /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 40\n}, this);\n_c = UncontrolledInput;\nexport const TrackValueOfUncontrolledInput = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => {\n        const actualValue = event.currentTarget.value;\n        setValue(actualValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), \" - \", value]\n  }, void 0, true);\n};\n\n_s(TrackValueOfUncontrolledInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c2 = TrackValueOfUncontrolledInput;\nexport const TrackValueOfUncontrolledInputByButtonPress = () => {\n  _s2();\n\n  const [value, setValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => {\n        const actualText = event.currentTarget.value;\n        setValue(actualText);\n        setValue(\"ooooo!\");\n      },\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, this), \"  - actual value:\", value]\n  }, void 0, true);\n};\n\n_s2(TrackValueOfUncontrolledInputByButtonPress, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c3 = TrackValueOfUncontrolledInputByButtonPress;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UncontrolledInput\");\n$RefreshReg$(_c2, \"TrackValueOfUncontrolledInput\");\n$RefreshReg$(_c3, \"TrackValueOfUncontrolledInputByButtonPress\");","map":{"version":3,"sources":["/home/hannamintel/MY FILES/GIT/React-TypeScript_Training/react_k/src/components/input/input.tsx"],"names":["React","useState","UncontrolledInput","TrackValueOfUncontrolledInput","value","setValue","event","actualValue","currentTarget","TrackValueOfUncontrolledInputByButtonPress","actualText"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA,QAAhC;KAAMA,iB;AAEb,OAAO,MAAMC,6BAA6B,GAAG,MAAM;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBAAO;AAAA,4BACC;AAAO,MAAA,QAAQ,EAAGK,KAAD,IAAW;AACxB,cAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBJ,KAAxC;AACAC,QAAAA,QAAQ,CAACE,WAAD,CAAR;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,YADD,SAIUH,KAJV;AAAA,kBAAP;AAMC,CATM;;GAAMD,6B;;MAAAA,6B;AAWb,OAAO,MAAMM,0CAA0C,GAAG,MAAM;AAAA;;AAC5D,QAAM,CAACL,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBAAO;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA,YADD,oBACW;AAAQ,MAAA,OAAO,EAAGK,KAAD,IAAW;AACjC,cAAMI,UAAU,GAAGJ,KAAK,CAACE,aAAN,CAAoBJ,KAAvC;AACAC,QAAAA,QAAQ,CAACK,UAAD,CAAR;AACDL,QAAAA,QAAQ,CAAC,QAAD,CAAR;AAAmB,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADX,uBAKsCD,KALtC;AAAA,kBAAP;AAOC,CAVE;;IAAMK,0C;;MAAAA,0C","sourcesContent":["import React, { useState } from \"react\";\n\nexport const UncontrolledInput = () => <input />;\n\nexport const TrackValueOfUncontrolledInput = () => {\nconst [value, setValue] = useState(\"\");\n\nreturn <>\n        <input onChange={(event) => {\n            const actualValue = event.currentTarget.value;\n            setValue(actualValue);\n        }} /> - {value} \n    </>;\n}\n\nexport const TrackValueOfUncontrolledInputByButtonPress = () => {\n    const [value, setValue] = useState(\"\");\n    \n    return <>\n            <input /> <button onClick={(event) => {\n                 const actualText = event.currentTarget.value;\n                 setValue(actualText);\n                setValue(\"ooooo!\")}\n                }>save</button>  - actual value:{value}\n        </>;\n    }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/hannamintel/MY FILES/FRONTEND DEV/STEP 4. REACT/1ST WEEK/react_kabzda/src/components/UncontrolledAccordion/UncontrolledAccordion.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UncontrolledAccordion = props => {\n  _s();\n\n  console.log(\"Accordion rendering\");\n  let [collapsed, collapsedSwitch] = useState(false); // hook\n\n  const buttonSTyle = {\n    width: \"30px\",\n    height: \"20px\",\n    border: \"1px solid black\",\n    display: \"inline-block\",\n    padding: \"2px\",\n    backgroundColor: on ? \"green\" : \"white\"\n  };\n  con;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonSTyle,\n      onClick: () => {\n        collapsedSwitch(true);\n      },\n      children: \"TOGGLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(UncontrolledAccordion, \"Qn2GU4q0so4k5azqP9GUaf1OgyI=\");\n\n_c = UncontrolledAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"UncontrolledAccordion\");","map":{"version":3,"sources":["/home/hannamintel/MY FILES/FRONTEND DEV/STEP 4. REACT/1ST WEEK/react_kabzda/src/components/UncontrolledAccordion/UncontrolledAccordion.tsx"],"names":["React","UncontrolledAccordion","props","console","log","collapsed","collapsedSwitch","useState","buttonSTyle","width","height","border","display","padding","backgroundColor","on","con"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AASC,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAA0B;AAAA;;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,MAAI,CAACC,SAAD,EAAYC,eAAZ,IAA+BC,QAAQ,CAAU,KAAV,CAA3C,CAH4D,CAGC;;AAE7D,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE,MADW;AAElBC,IAAAA,MAAM,EAAE,MAFU;AAGlBC,IAAAA,MAAM,EAAE,iBAHU;AAIlBC,IAAAA,OAAO,EAAE,cAJS;AAKlBC,IAAAA,OAAO,EAAE,KALS;AAMlBC,IAAAA,eAAe,EAAEC,EAAE,GAAG,OAAH,GAAa;AANd,GAApB;AAQFC,EAAAA,GAAG;AAEC,sBACE;AAAA,2BACE;AAAQ,MAAA,KAAK,EAAER,WAAf;AAA4B,MAAA,OAAO,EAAG,MAAM;AAAEF,QAAAA,eAAe,CAAC,IAAD,CAAf;AAAsB,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUL,CAzBO;;GAAML,qB;;KAAAA,qB","sourcesContent":["import React from \"react\";\nimport { UncontrolledAccordionBody } from \"./UncontrolledAccordionBody\";\nimport { UncontrolledAccordionTitle } from \"./UncontrolledAccordionTitle\";\n\ntype AccordionType = {\n    title?: string;\n    // collapsed?: boolean;\n}\n\n export const UncontrolledAccordion = (props: AccordionType) => { \n    console.log(\"Accordion rendering\")\n\n    let [collapsed, collapsedSwitch] = useState<boolean>(false); // hook\n\n    const buttonSTyle = {\n      width: \"30px\",\n      height: \"20px\",\n      border: \"1px solid black\",\n      display: \"inline-block\",\n      padding: \"2px\",\n      backgroundColor: on ? \"green\" : \"white\"\n  };\n  con\n\n      return (\n        <>\n          <button style={buttonSTyle} onClick={ () => { collapsedSwitch(true)}}>TOGGLE</button>\n\n\n            {/* <UncontrolledAccordionTitle header={props.title}/> \n           { collapsed &&  <UncontrolledAccordionBody /> } */}\n\n        </>\n      );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}